name: CI
on:
  push:
    branches-ignore: [repl]
  pull_request:
  workflow_dispatch:
    inputs:
      debug:
        description: debug with tmate
        default: 'false'
        required: false

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      TURBO_TEAMID: ${{ secrets.TURBO_TEAMID }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

    steps:
    - uses: actions/checkout@v3

    # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
    - uses: pnpm/action-setup@v2.2.2
      with:
        version: 7.12.2
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: pnpm
    - name: Install node_modules
      run: pnpm i --frozen-lockfile

    - name: Build
      run: pnpm build
    - name: Lint
      run: pnpm lint
    - name: Test
      run: pnpm test

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ^1.3.0
        terraform_wrapper: false
    - name: Initialise Terraform
      run: terraform init
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    - name: Validate Terraform
      run: terraform validate

    - name: Update docs
      run: scripts/push-docs.sh
      env:
        GIT_AUTHOR_NAME: Github Actions
        GIT_COMMITTER_NAME: Github Actions
        GIT_AUTHOR_EMAIL: actions@github.com
        GIT_COMMITTER_EMAIL: actions@github.com

    - name: Upload build data
      if: >
        success() && (
          github.event_name == 'push' && github.ref == 'refs/heads/main' ||
          github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true'
        )
      uses: actions/upload-artifact@v3
      with:
        name: build-data
        path: |
          packages/bot/dist/src
          packages/bot/dist/package.json
          packages/scripts/dist
        if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true'
    needs: test

    steps:
    - uses: actions/checkout@v3

    - uses: pnpm/action-setup@v2
      with:
        version: 7.12.2
    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: pnpm
    - name: Install node_modules
      run: pnpm i --frozen-lockfile

    - name: Download build data
      uses: actions/download-artifact@v3
      with:
        name: build-data
        path: packages

    - uses: crazy-max/ghaction-import-gpg@v5
      if: false # semantic-release not working right now
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git-user-signingkey: true
        git-commit-gpgsign: true

    - uses: mxschmitt/action-tmate@v3
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: Github Actions
        GIT_COMMITTER_NAME: Github Actions
        GIT_AUTHOR_EMAIL: actions@github.com
        GIT_COMMITTER_EMAIL: actions@github.com

    # TODO: fix

    # 1206 verbose stack TypeError: Cannot read properties of null (reading 'matches')
    # 1206 verbose stack     at Link.matches (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/node.js:1107:41)
    # 1206 verbose stack     at Link.canDedupe (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/node.js:1061:15)
    # 1206 verbose stack     at PlaceDep.pruneDedupable (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:468:14)
    # 1206 verbose stack     at PlaceDep.placeInTree (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:329:14)
    # 1206 verbose stack     at PlaceDep.place (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:216:10)
    # 1206 verbose stack     at new PlaceDep (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:73:10)
    # 1206 verbose stack     at PlaceDep.placeInTree (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:365:26)
    # 1206 verbose stack     at PlaceDep.place (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:216:10)
    # 1206 verbose stack     at new PlaceDep (/opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/place-dep.js:73:10)
    # 1206 verbose stack     at /opt/hostedtoolcache/node/16.17.0/x64/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/arborist/build-ideal-tree.js:990:31

    # also EUNSUPPORTEDPROTOCOL because of link:

    - name: Release
      run: pnpx multi-semantic-release
      if: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_COMMITTER_NAME: cherryblossom
        GIT_COMMITTER_EMAIL: 31467609+cherryblossom000@users.noreply.github.com

    - uses: mxschmitt/action-tmate@v3
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: Github Actions
        GIT_COMMITTER_NAME: Github Actions
        GIT_AUTHOR_EMAIL: actions@github.com
        GIT_COMMITTER_EMAIL: actions@github.com

    - name: Register commands
      run: pnpm register-commands
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        APP_ID: '554539674899841055'
        NODE_ENV: production

    - uses: docker/setup-buildx-action@v2
      with:
        version: v0.9.1
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: docker/metadata-action@v4
      id: meta
      with:
        images: ghcr.io/${{ github.repository }}
        tags: type=sha
    - uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ^1.3.0
        terraform_wrapper: false
    - name: Initialise Terraform
      run: terraform init
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    - name: Apply Terraform
      run: terraform apply -auto-approve -input=false "-var=sha=${GITHUB_SHA:0:7}"
      env:
        KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
